-- [nfnl] Compiled from fnl/aviles/keymaps.fnl by https://github.com/Olical/nfnl, do not edit.
vim.opt.hlsearch = true
local map = vim.keymap.set
map("n", "<Esc>", "<cmd>nohlsearch<CR>")
map("n", "<leader>cd", vim.diagnostic.open_float, {desc = "Line Diagnostics"})
map("n", "[d", vim.diagnostic.goto_prev, {desc = "Go to previous [D]iagnostic message"})
map("n", "]d", vim.diagnostic.goto_next, {desc = "Go to next [D]iagnostic message"})
map("t", "<Esc><Esc>", "<C-\\><C-n>", {desc = "Exit terminal mode"})
map("n", "<C-h>", "<C-w><C-h>", {desc = "Move focus to the left window"})
map("n", "<C-l>", "<C-w><C-l>", {desc = "Move focus to the right window"})
map("n", "<C-j>", "<C-w><C-j>", {desc = "Move focus to the lower window"})
map("n", "<C-k>", "<C-w><C-k>", {desc = "Move focus to the upper window"})
map("n", "<S-h>", "<cmd>bprevious<cr>", {desc = "Prev Buffer"})
map("n", "<S-l>", "<cmd>bnext<cr>", {desc = "Next Buffer"})
map("n", "[b", "<cmd>bprevious<cr>", {desc = "Prev Buffer"})
map("n", "]b", "<cmd>bnext<cr>", {desc = "Next Buffer"})
map("n", "<leader>bb", "<cmd>e #<cr>", {desc = "Switch to Other Buffer"})
map("n", "<leader><tab>", "<cmd>e #<cr>", {desc = "Switch to Other Buffer"})
local function _1_()
  local current_file = vim.fn.expand("%:p")
  local relative_path = vim.fn.fnamemodify(current_file, ":.")
  vim.fn.setreg("+", relative_path)
  return vim.api.nvim_out_write(("Relative path copied to clipboard: " .. relative_path .. "\n"))
end
map("n", "<leader>byp", _1_, {desc = "Copy path"})
local function _2_()
  local current_file = vim.fn.expand("%:p")
  vim.fn.setreg("+", current_file)
  return vim.api.nvim_out_write(("Relative path copied to clipboard: " .. current_file .. "\n"))
end
map("n", "<leader>byP", _2_, {desc = "Relative path"})
local function _3_()
  local current_file = vim.fn.expand("%:p")
  local file_name = vim.fn.fnamemodify(current_file, ":t")
  vim.fn.setreg("+", file_name)
  return vim.api.nvim_out_write(("File name copied to clipboard: " .. file_name .. "\n"))
end
map("n", "<leader>byf", _3_, {desc = "Copy full path"})
map("n", "<leader>la", "<cmd>Lazy<cr>", {desc = "Lazy"})
map("n", "<leader>ww", "<C-W>p", {desc = "Other Window", remap = true})
map("n", "<leader>wd", "<C-W>c", {desc = "Delete Window", remap = true})
local function _4_()
  return vim.cmd.only()
end
map("n", "<leader>wm", _4_, {desc = "Maximize Window", remap = true})
map("n", "<leader>w-", "<C-W>s", {desc = "Split Window Below", remap = true})
map("n", "<leader>w|", "<C-W>v", {desc = "Split Window Right", remap = true})
map("n", "<leader>-", "<C-W>s", {desc = "Split Window Below", remap = true})
map("n", "<leader>|", "<C-W>v", {desc = "Split Window Right", remap = true})
map("n", "<C-h>", "<C-w>h", {desc = "Go to Left Window", remap = true})
map("n", "<C-j>", "<C-w>j", {desc = "Go to Lower Window", remap = true})
map("n", "<C-k>", "<C-w>k", {desc = "Go to Upper Window", remap = true})
map("n", "<C-l>", "<C-w>l", {desc = "Go to Right Window", remap = true})
map("n", "<C-Up>", "<cmd>resize +2<cr>", {desc = "Increase Window Height"})
map("n", "<C-Down>", "<cmd>resize -2<cr>", {desc = "Decrease Window Height"})
map("n", "<C-Left>", "<cmd>vertical resize -2<cr>", {desc = "Decrease Window Width"})
map("n", "<C-Right>", "<cmd>vertical resize +2<cr>", {desc = "Increase Window Width"})
return map("n", "<leader>uw", "<cmd>set wrap!<cr>", {desc = "Toggle Word Wrap"})
